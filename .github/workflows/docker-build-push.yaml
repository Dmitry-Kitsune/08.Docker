name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger with inputs
    inputs:
      imageToBuild:
        description: 'The image directory to build'
        required: true
        default: 'my-nodejs-app'
      tagImage:
        description: 'Tag for the image'
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Set up Docker Buildx (required for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build and push Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.imageToBuild || 'nodejs' }}:${{ github.event.inputs.tagImage || 'latest' }}

      # Step 5: Send success notification to Slack if the build succeeds
      - name: Send success notification to Slack
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Docker image build notification:",
              "attachments": [
                {
                  "fallback": "Docker image built successfully.",
                  "pretext": "Docker image build completed successfully! üéâ",
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.imageToBuild || 'nodejs' }}:${{ github.event.inputs.tagImage || 'latest' }}",
                      "short": true
                    },
                    {
                      "title": "Ref",
                      "value": "${{ github.ref }}",
                      "short": true
                    },
                    {
                      "title": "Event",
                      "value": "${{ github.event_name }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "${{ github.sha }}",
                      "short": true
                    },
                    {
                      "title": "Actions URL",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "short": false
                    },
                    {
                      "title": "Docker Image Status",
                      "value": "Docker image is ready: ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.imageToBuild || 'nodejs' }}:${{ github.event.inputs.tagImage || 'latest' }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 6: Send failure notification to Slack if the build fails
      - name: Send failure notification to Slack
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Docker image build notification:",
              "attachments": [
                {
                  "fallback": "Docker image build failed.",
                  "pretext": "Docker image build encountered an error! ‚ùå",
                  "color": "#FF0000",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.imageToBuild || 'nodejs' }}:${{ github.event.inputs.tagImage || 'latest' }}",
                      "short": true
                    },
                    {
                      "title": "Ref",
                      "value": "${{ github.ref }}",
                      "short": true
                    },
                    {
                      "title": "Event",
                      "value": "${{ github.event_name }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "${{ github.sha }}",
                      "short": true
                    },
                    {
                      "title": "Actions URL",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "short": false
                    },
                    {
                      "title": "Docker Image Status",
                      "value": "Docker image build failed :x:",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
