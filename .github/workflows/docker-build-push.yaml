name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Set up Docker Buildx (required for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build and push Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          github context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-nodejs-app:latest
          build-args: |
            SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 5: Send success notification to Slack if the build succeeds
      - name: Send success notification to Slack
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Docker image built and pushed successfully to GHCR :tada:",
              "username": "GitHub Actions Bot",
              "icon_emoji": ":rocket:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 6: Send failure notification to Slack if the build fails
      - name: Send failure notification to Slack
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Docker image build failed :x:",
              "username": "GitHub Actions Bot",
              "icon_emoji": ":exclamation:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
